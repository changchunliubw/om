<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cgwx.dao.UrmImagingRequirementMapper" >
  <resultMap id="BaseResultMap" type="com.cgwx.data.entity.UrmImagingRequirement" >
    <result column="imaging_id" property="imagingId" jdbcType="VARCHAR" />
    <result column="imaging_status" property="imagingStatus" jdbcType="INTEGER" />
    <result column="requirement_id" property="requirementId" jdbcType="VARCHAR" />
    <result column="imaging_satellite" property="imagingSatellite" jdbcType="VARCHAR" />
    <result column="imaging_method" property="imagingMethod" jdbcType="INTEGER" />
    <result column="satellite_imaging_times" property="satelliteImagingTimes" jdbcType="INTEGER" />
    <result column="imaging_start_time" property="imagingStartTime" jdbcType="TIMESTAMP" />
    <result column="imaging_end_time" property="imagingEndTime" jdbcType="TIMESTAMP" />
    <result column="imaging_internal" property="imagingInternal" jdbcType="INTEGER" />
    <result column="imaging_frequency_request" property="imagingFrequencyRequest" jdbcType="INTEGER" />
  </resultMap>
  <insert id="insert" parameterType="com.cgwx.data.entity.UrmImagingRequirement" >
    insert into urm_imaging_requirement (imaging_id, imaging_status, requirement_id, 
      imaging_satellite, imaging_method, satellite_imaging_times, 
      imaging_start_time, imaging_end_time,imaging_internal,imaging_frequency_request)
    values (#{imagingId,jdbcType=VARCHAR}, #{imagingStatus,jdbcType=INTEGER}, #{requirementId,jdbcType=VARCHAR}, 
      #{imagingSatellite,jdbcType=VARCHAR}, #{imagingMethod,jdbcType=INTEGER}, #{satelliteImagingTimes,jdbcType=INTEGER}, 
      #{imagingStartTime,jdbcType=TIMESTAMP}, #{imagingEndTime,jdbcType=TIMESTAMP},#{imagingInternal,jdbcType=INTEGER},
      #{imagingFrequencyRequest,jdbcType=INTEGER})
  </insert>
  <select id="selectAll" resultMap="BaseResultMap" >
    select imaging_id, imaging_status, requirement_id, imaging_satellite, imaging_method, 
    satellite_imaging_times, imaging_start_time, imaging_end_time
    from urm_imaging_requirement
  </select>
</mapper>